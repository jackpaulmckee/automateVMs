

Reliability Engineer===================================================
data mapping
    - combined data from multiple databases (multiple sources of information and different attributes) based on a primary key

















VMware ==================================================================
Virtualization 101
    - ESXi client
        - manage host settings
        - monitor host metrics
        - generate logs of host metrics and events
    - vSphere client
        - create and manage clusters, hosts, VMs, and nested hosts
        - configure VMs
            - customize virtual hardware
                - cpu, memory, disk, networking, compatibility tuning
        - mount an OS ISO file to a VM to install and configure the OS
        - mount an ESXi hypervisor ISO file to a VM, and install and configure ESXi
        - use tags and searching to navigate and organize my inventory
        - configure a host cluster to run vSphere High Availability (HA), Fault Tolerance (FT), and Distributed Resource Scheduler (DRS)
        - use vMotion to migrate VMs from one host to another within the cluster
        - move hosts from one vCenter Server Appliance (VCSA) to another VCSA
        - create and edit resource pools
        - use events and alarms: I can look at, edit, and create
            - edit the alarm for host cpu usage
        - edit settings of virtual hardware for shares, reservations, and limits
        - look at and create performance charts of cpu usage of a host
            - Create a chart of cpu usage per VM on the host
            - create a chart of memory (active, ballooned, and compressed) per VM on the host
        - interact with datastorers of varying use cases


    Whats next?
    - if possible, take a look at your environment
    - learn more features (networking, security, automation, CLI)
    - run more testing of metrics

    Questions:
    - what does your vSphere environment look like? What is the magnitudes and quantities of resources, both provided and consumed?
    - how do your team members typically learn about VMware products? 
    - what do you recommend is the best path for me to upskill in this area?





AD DS==========================================================================
- ISO boot issues
    - Tried configs of virtual hardware, firmware modes, controller types
    - Tried versions of windows server and vmware workstation pro
    - Optimal file locations for VMs and virtual media
    - physical host virtualization layer conflict
- VHD boot
    - .vhd is not compatible with vmware
    - Convert .vhd to .vmdk

- Used the windows server vm to create a domain controller
    - Configure networking: server’s ip, subnet mask, gateway address
    - Use the server’s self ip as the DNS address
    - Promote the server to being a domain controller
- Created an organizational unit with multiple users
- Joined a client to the AD
    - Use the domain controller ip as the client’s DNS address
    - Join the domain via This PC system settings





Git Repo============================================================

I built a turn key git repo that allows a user to deploy and configure their own cloud compute resources on AWS.
And provides the user with a few options for capabilities. In a way that is conveniently repeatable for a beginner user.


bash commands and bash scripts:
- familiarized myself with the shell, kernel, terminal, OSs, bash commands for essential computer interaction
- quickly found that i could not use my physical host as the control node because windows does not support ansible
    - learned about linux and linux distros
- learned git and github. Confirm that I can push and clone code
- set up a linux ubuntu server VM and a linux ubuntu desktop client VM. Confirm the VMs can ping eachother and the internet
- used bash commands in the terminal of the client VM to ssh into the server VMs
    - serve a webpage on the server then access the webpage on the client
    - do some baseline hardening of the server:
        - create ssh key pair for key authentication
        - install and configure firewall so only the webpage port is allowed
        - disable password authentication
- now that i can do all these things manually, can i put them in a bash script?

Ansible:
- can i do these things with ansible playbooks?
- familiarize myself with ansible's documentation and syntaxes: yaml, jinja, html
- set up virtual environment
- use ansible to ping the target nodes
- wrote the playbooks:
    - to configure existing servers to each serve their own unique webpage
    - to baseline harden each server
- used ansible project file structure and features: .cfg, inventories, variables, modules, plugins, galaxy, collections, templates, .gitignore

AWS:
- familiarize myself with AWS EC2, learned how to spin up instances using the AWS webiste
- how do i connect ansible to AWS? Learn APIs and SDKs
    - my playbook --> ansible AWS collection --> python SDK for AWS --> AWS EC2 API --> amazon EC2
- connect my ansible control node to the AWS API
- wrote ansible playbook to spin up EC2 instances of ubuntu servers
- created a dynamic inventory using an AWS plugin so that my previous playbooks a can be used on these EC2 instances
- wrote playbook to configure the target nodes to be able to be monitored
- wrote playbook to configure the control node to extract the data
- wrote a python script to query and plot the data




    Whats next?
    - more testing of metrics
    - set up an environment where servers will be monitored, alerted on, investigated, and fixed
    - containerize the repo

    Questions:



Playbooks================================================

web.yml
    - ensures apache is installed and enabled
    - ensures images file exists on target node
    - sends a jpeg from control node to target node
    - sends an html file from the control node to the target node
    - reloads apache

baseline_hardening.yml
    - creates new users for sudo priveleges
    - adds ssh keys for the new users
    - configures firewall
    - disable password auth
    - restart ssh

provision.yml
    - stores AWS credentials
    - stores values for an ssh key pair
    - creates AWS security group allowing ssh and webpage listening
    - launches the EC2 instances

prom_node_exporter.yml
    - install and enable prometheus node exporter on the target nodes
    - install firewall
    - allow prometheus server to scrape prometheus node exporter server
    - enable firewall

monitor_stack.yml
    - install and enable prometheus on the control node
    - use a template jinja file and ansible config to create the prometheus config
    restart prometheus

prometheus_plot.py
    - imports dependencies
    - configures prometheus query parameters
    - performs the query, getting data from prometheus in the form of metric series for each server instance
    - converts each metric series into a data frame (pandas library), then combines each data frame
    - plots data (cpu, memory, disk) (matplotlib library)






Networking=======================================

- configure VLANs, subnets, routing, and switching via the CLI and by using understanding of OSI model, life of a data packet
    - ROAS, trunk ports, access ports, variable length subnet masking,
    - on interfaces: ip address, speed, duplex, port, description, enabling/disabling interfaces
    - life of a packet: ARP requests/replies, MAC address tables










Why do I want to be here?
    - SRE position
        - I love the nature of the work
        - I love the complexity and dimensions within dimensions of:
            - SDLC, coding
            - virtualization
            - datacenter management
            - datacenter hardware, virtual and physical
        - the technologies are interesting to me plain and simple
        - I'm interested in the overall responsibility: ensure optimal performance of critical systems
        - I love the potential for interdisciplinary tasks. 
        - it seems like there is so much room for growth
        - combines the mindsets of my previous work experience
        - getting to know much better how the infrastructure works; that I've been working with and looking at
        - this kind of work suits me well. Coding, virtualization, datacenter infrastructe. I can do this all day every day
    - team
        - I like the mindset - fast paced, growth oriented, motivated, capability oriented
        - Dan and Lisa
    - mission
        - i want to contribute to something bigger than myself. I want to use my time and energy to contribute to a mission that is critically important. I want to be a part of a mission that I am PROUD of. 
        - this is it.


Future plans:
    - home lab:
        - more VMware labs (networking, automation, esxtop)
        - run more testing and data collection of computer metrics
        - set up an environment where servers will be monitored, alerted on, investigated, and fixed
        - containerize the git repo that i built
    - skills:
        - direct B team training and contribution
        - SRE textbook
        - SRE bootcamp
        - certifications
        - home lab






Questions:
- how does your team define and measure system health?
- what is your incident management process like?