This is where I make notes of things that happened during the project. For future reference.


Concepts:
- familiarize myself with running bash commands in the terminal
- familiarize myself with git and github
- learn syntax of ansible, yaml, jinja, html
- ansible playbooks, variables, modules, functions, loops
- ansible roles, collections, modules, plugins
- ssh contexts, priveleges, key authentication
- APIs, SDKs
- AWS
- virtual environments for python usage; system packages vs python packages
- dynamic inventories; ansible playbooks vs inventories; group variables
- server authentication via host key vs user authentication via ssh key pairs



Actions:
- confirm VMs can ping eachother and the internet
- confirm VMs can all ssh into eachother
- generated key pair to allow for ssh key authentication
- manually serve an apache webpage 
- serve a webpage using an ansible playbook
- configure baseline hardening of servers
- deploy ubuntu servers via ansible





Problems:
- Virtual machine settings issue
    - ubuntu server could not boot bc I did not allocate enough storage to its virtual disk
    - cloned a server vm and it created a vm with an identical ip address
    - power off vs shut down guest corrupted my git repo. And could possibly do more harm than that too. Learned to use shut down guest

- link issues
    - could not use my physical host machine to be the control node bc regular windows does not support ansible as a control node
    - even though ufw was enabled, the client VM could somehow still access that server's webpage

- physical hardware limitations
    - esxi and vcenter could not both run bc my physical machine does not have enough RAM
    - im even having trouble running 2 server VMs and 1 client VM in workstation pro. Just bc my computer has only 16gb of RAM


backrefs???
file structure that happens above users and home???
Learn more about venv. When it's activated, what exactly is the difference of how files are accessed and used?
ansible collections requirements.yml grrrrrrrrrrrr
install aws cli so that i can store aws credentials on my machine
what is x86





======================================================================
NOTES
======================================================================

vSphere High Availability (HA) and vSphere Fault Tolerance (FT):
    - HA uses heartbeat monitoring to detect host failure. Then the VMs that were running on the failed host are restarted on a different healthy host within the same cluster. Brief downtime <1min. This is a REACTIVE mechanism. Low resource cost
    - FT keeps an identical, running copy of my VM on another host. If the primary host fails, the secondary VM instantly takes over. Zero downtime. Proactive mechanism. High resource cost
        - HA is like an automatic backup generator — if the power goes out, it restarts your house.
        - FT is like having a second power line running in parallel — if one line fails, you don’t even flicker.
vSphere Distributed Resource Scheduler (DRS) automatically balances workloads across the hosts in a cluster. So that no one host gets overloaded while the others sit idle.
